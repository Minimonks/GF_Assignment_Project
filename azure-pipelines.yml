# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python39:
      python.version: '3.11'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    echo DBDev: $DBDev
    echo DBTest: $DBTest
    echo FLASK_DEBUG: $FLASK_DEBUG
    echo APP_SECRET_KEY: $APP_SECRET_KEY
  env:
    DBDev: $(DBDev)
    DBTest: $(DBTest)
    FLASK_DEBUG: $(FLASK_DEBUG)
    APP_SECRET_KEY: $(APP_SECRET_KEY)
  displayName: 'Print environment variables'

- script: |
     python -m unittest discover
  displayName: 'unittest'
